config_sources:
  env:
    defaults:
      HEROKU_DYNO_ID: "unset"
      HEROKU_APP_ID: "unset"
      HEROKU_APP_NAME: "unset"

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  http_forwarder:
    ingress:
      endpoint: 0.0.0.0:6060
    egress:
      endpoint: "${SPLUNK_API_URL}"
      # Use instead when sending to gateway
      #endpoint: "${SPLUNK_GATEWAY_URL}"
  zpages:
    #endpoint: 0.0.0.0:55679

receivers:
  jaeger:
    protocols:
      grpc:
        endpoint: 0.0.0.0:14250
      thrift_binary:
        endpoint: 0.0.0.0:6832
      thrift_compact:
        endpoint: 0.0.0.0:6831
      thrift_http:
        endpoint: 0.0.0.0:14268
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  # This section is used to collect the OpenTelemetry Collector metrics
  # Even if just a Splunk APM customer, these metrics are included
  prometheus/internal:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['0.0.0.0:8888']
          metric_relabel_configs:
            - source_labels: [ __name__ ]
              regex: '.*grpc_io.*'
              action: drop
  signalfx:
    endpoint: 0.0.0.0:9943
  zipkin:
    endpoint: 0.0.0.0:9411

processors:
  batch:
  memory_limiter:
    check_interval: 2s
    limit_mib: ${SPLUNK_MEMORY_LIMIT_MIB}
  attributes/heroku:
    actions:
      - action: insert
        key: dyno_id
        value: ${env:HEROKU_DYNO_ID}
      - action: insert
        key: app_id
        value: ${env:HEROKU_APP_ID}
      - action: insert
        key: app_name
        value: ${env:HEROKU_APP_NAME}
  metricstransform/heroku:
    transforms:
      - include: .*
        match_type: regexp
        action: update
        operations:
          - action: add_label
            new_label: dyno_id
            new_value: ${env:HEROKU_DYNO_ID}
          - action: add_label
            new_label: app_id
            new_value: ${env:HEROKU_APP_ID}
          - action: add_label
            new_label: app_name
            new_value: ${env:HEROKU_APP_NAME}
  # Optional: The following processor can be used to add a default "deployment.environment" attribute to the logs and
  # traces when it's not populated by instrumentation libraries.
  # If enabled, make sure to enable this processor in the pipeline below.
  #resource/add_environment:
    #attributes:
      #- action: insert
        #key: deployment.environment
        #value: staging/production/...

exporters:
  # Traces
  sapm:
    access_token: "${SPLUNK_ACCESS_TOKEN}"
    endpoint: "${SPLUNK_TRACE_URL}"
  # Metrics + Events
  signalfx:
    access_token: "${SPLUNK_ACCESS_TOKEN}"
    realm: "${SPLUNK_REALM}"
  splunk_hec/profiling:
    token: "${SPLUNK_ACCESS_TOKEN}"
    endpoint: "${SPLUNK_PROFILING_URL}"
  # Send to gateway
  #otlp:
  # endpoint: "${SPLUNK_GATEWAY_URL}:4317"
  # insecure: true

  # Debug. Add this to the pipeline you want to debug.
  logging:
    loglevel: debug

service:
  extensions: [health_check, http_forwarder, zpages]
  pipelines:
    traces:
      receivers: [jaeger, otlp, zipkin]
      processors:
        - memory_limiter
        - batch
        - attributes/heroku
      #- resource/add_environment
      exporters: [sapm, signalfx]
    metrics:
      receivers: [otlp, signalfx]
      processors: [memory_limiter, batch, metricstransform/heroku]
      exporters: [signalfx]
    metrics/internal:
      receivers: [prometheus/internal]
      processors: [memory_limiter, batch, metricstransform/heroku]
      exporters: [signalfx]
    logs/profiling:
      receivers: [otlp]
      processors: [memory_limiter, batch, attributes/heroku]
      exporters: [splunk_hec/profiling]
